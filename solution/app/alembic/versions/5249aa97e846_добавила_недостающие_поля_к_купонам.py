"""добавила недостающие поля к купонам

Revision ID: 5249aa97e846
Revises: 
Create Date: 2025-01-23 18:36:52.980759

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '5249aa97e846'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=120), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=60), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('users',
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('surname', sqlmodel.sql.sqltypes.AutoString(length=120), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=120), nullable=False),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(length=350), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=60), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('promocodes',
    sa.Column('age_from', sa.Integer(), nullable=True),
    sa.Column('age_until', sa.Integer(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=2), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=300), nullable=False),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(length=350), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active_from', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active_until', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('max_count', sa.Integer(), nullable=False),
    sa.Column('mode', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('promo_common', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=True),
    sa.Column('company_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activatepromobyuser',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('promocode_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['promocode_id'], ['promocodes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'promocode_id')
    )
    op.create_table('categories',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('promo_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['promo_id'], ['promocodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comments',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('promocode_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['promocode_id'], ['promocodes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('likes',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('promocode_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['promocode_id'], ['promocodes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'promocode_id')
    )
    op.create_table('promounique',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('promo_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['promo_id'], ['promocodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('promounique')
    op.drop_table('likes')
    op.drop_table('comments')
    op.drop_table('categories')
    op.drop_table('activatepromobyuser')
    op.drop_table('promocodes')
    op.drop_table('users')
    op.drop_table('companies')
    # ### end Alembic commands ###
